{"version":3,"sources":["../../../src/server/types.ts"],"sourcesContent":["import type { AuthObject } from '@clerk/backend';\nimport type { SessionTokenType, TokenType } from '@clerk/backend/internal';\nimport type { IncomingMessage } from 'http';\nimport type { NextApiRequest } from 'next';\nimport type { NextApiRequestCookies } from 'next/dist/server/api-utils';\nimport type { NextMiddleware, NextRequest } from 'next/server';\n\n// Request contained in GetServerSidePropsContext, has cookies but not query\ntype GsspRequest = IncomingMessage & { cookies: NextApiRequestCookies };\n\nexport type RequestLike = NextRequest | NextApiRequest | GsspRequest;\n\nexport type NextMiddlewareRequestParam = Parameters<NextMiddleware>['0'];\nexport type NextMiddlewareEvtParam = Parameters<NextMiddleware>['1'];\nexport type NextMiddlewareReturn = ReturnType<NextMiddleware>;\n\n/**\n * Infers auth object type from an array of token types.\n * - Session token only -> SessionType\n * - Mixed tokens -> SessionType | MachineType\n * - Machine tokens only -> MachineType\n */\nexport type InferAuthObjectFromTokenArray<\n  T extends readonly TokenType[],\n  SessionType extends AuthObject,\n  MachineType extends AuthObject,\n> = SessionTokenType extends T[number]\n  ? T[number] extends SessionTokenType\n    ? SessionType\n    : SessionType | (MachineType & { tokenType: T[number] })\n  : MachineType & { tokenType: T[number] };\n\n/**\n * Infers auth object type from a single token type.\n * Returns SessionType for session tokens, or MachineType for machine tokens.\n */\nexport type InferAuthObjectFromToken<\n  T extends TokenType,\n  SessionType extends AuthObject,\n  MachineType extends AuthObject,\n> = T extends SessionTokenType ? SessionType : MachineType & { tokenType: T };\n"],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;","names":[]}